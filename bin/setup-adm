#!/usr/bin/env bash
# .sh/bin/setup-adm 20170519 - 20180222
# Copyright (C) 1995-2017 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ $1 == '-h' || $1 == '--help' ]] && \
    echo "Usage: setup-adm domain [mysql(default)|sqlite]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo)" && exit 2

source ~/.defaults || exit 3

[[ ! -d $VPATH ]] && echo "!!! ERROR: setup server first" && exit 4

if [[ -d $VPATH/adm.$VHOST ]]; then
    echo "*** $VPATH/adm.$VHOST already exists"
else
    addvhost $ADMIN@adm.$VHOST $2 $(< /root/.pw)
fi

UPATH=$VPATH/adm.$VHOST
WPATH=$UPATH/var/www

if [[ -f $UPATH/.ssh/authorized_keys ]]; then
    echo "*** $UPATH/.ssh/authorized_keys already exists"
else
    if [[ ! -f /root/.ssh/id_rsa.pub ]]; then
        echo "*** Warning /root/.ssh/id_rsa.pub does not exist"
    else
        echo "*** Create $UPATH/.ssh/authorized_keys"
        cp /root/.ssh/id_rsa.pub $UPATH/.ssh/authorized_keys
    fi
fi

if [[ -d $WPATH/.git ]]; then
    echo "*** $WPATH/.git (HCP) already exists"
else
    echo "*** Clone Netserva HCP to $WPATH"
    cd $UPATH/var
    [[ -d www && ! -d www_old ]] && mv www www_old
    git clone https://github.com/netserva/www > /dev/null 2>&1
fi

if [[ -f $WPATH/.htpasswd ]]; then
    echo "*** $WPATH/.htpasswd already exists"
else
    PIN=$RANDOM
    echo "*** Create $WPATH/.htpasswd sysadm/$PIN"
    htpasswd -b -c $WPATH/.htpasswd sysadm $PIN
    echo "# HTTP auth for https://adm.$VHOST -> sysadm / $PIN" >> ~/.my.cnf
fi

# Even if SQLite is the default this is so switching to MySQL has a chance
# of working when index.php db=>type is manally changed to "mysql".
if [[ -f $WPATH/lib/.ht_pw ]]; then
    echo "*** $WPATH/lib/.ht_pw already exists"
else
    echo "*** Create $WPATH/lib/.ht_pw"
    echo $DPASS > $WPATH/lib/.ht_pw
fi

if [[ -d $WPATH/webmail ]]; then
    echo "*** $WPATH/webmail already exists"
else
    echo "*** Setup rainloop in $WPATH/webmail"
    cd $UPATH/var
    mkdir $WPATH/webmail
    cd $WPATH/webmail
    wget -q https://www.rainloop.net/repository/webmail/rainloop-latest.zip
    unzip rainloop-latest.zip > /dev/null 2>&1
    rm rainloop-latest.zip
    NEWPW=$(awk '{print $3}' /root/.pw)
    sed -i "/admin_password/ s/12345/$NEWPW/" $WPATH/webmail/data/_data_/_default_/configs/application.ini
    cat << EOS | $SUDO tee $WPATH/webmail/data/_data_/_default_/domains/$VHOST.ini > /dev/null 2>&1
imap_host = "$VHOST"
imap_port = 993
imap_secure = "SSL"
imap_short_login = Off
sieve_use = Off
sieve_allow_raw = Off
sieve_host = ""
sieve_port = 4190
sieve_secure = "None"
smtp_host = "$VHOST"
smtp_port = 465
smtp_secure = "SSL"
smtp_short_login = Off
smtp_auth = On
smtp_php_mail = Off
white_list = ""
EOS
fi

if [[ $2 == mysql ]]; then
    if [[ -d $WPATH/phpmyadmin ]]; then
        echo "*** $WPATH/phpmyadmin already exists"
    else
        echo "*** Setup phpmyadmin to $WPATH/phpmyadmin"
        cd $UPATH/var
        wget -q https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-english.tar.gz
        tar xf phpMyAdmin-latest-english.tar.gz > /dev/null 2>&1
        mv phpMyAdmin-*/ www/phpmyadmin
        mv www/phpmyadmin/config.sample.inc.php www/phpmyadmin/config.inc.php
        ENCPW=$(newpw 4 | tr ' ' _)
        sed -i "/blowfish_secret/ s/''/'$ENCPW'/" www/phpmyadmin/config.inc.php
        rm phpMyAdmin-latest-english.tar.gz
    fi
    if [[ -f $WPATH/lib/.ht_conf.php ]]; then
        echo "*** $WPATH/lib/.ht_conf.php already exists"
    else
        echo "*** Create $WPATH/lib/.ht_conf.php (edit to modify/extend)"
        echo "<?php
return [
    'cfg' => ['email' => '$ADMIN@$VHOST'],
    'db' => ['type' => 'mysql', 'pass' => '$DPASS'],
];
" > $WPATH/lib/.ht_conf.php
    fi
fi

chperms adm.$VHOST > /dev/null 2>&1

# Default route IP
R_IP4=$(ip -4 route get 8.8.8.8 | awk '/src/ {print $7}')

# DNS vhost IP
D_IP4=$(host -t a $VHOST|cut -d' ' -f4)

if [[ $R_IP4 == $D_IP4 ]]; then
    sleep 1
    newssl $VHOST adm cdn www > /dev/null 2>&1
    echo "*** Setup Netserva HCP -> https://adm.$VHOST"
else
    echo "*** Setup Netserva HCP -> http://adm.$VHOST"
    echo "*** Note: if this server has outside net access"
    echo "***  with DNS pointing to it's FQDN then use"
    echo "*** \"newssl $VHOST adm cdn www\""
    echo "*** to provide a LetsEncrypt SSL certificate."
fi

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
