#!/usr/bin/env bash
# .sh/bin/tunnel 20181102 - 20181114
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ -z $1 || $1 =~ '-h' ]] && \
    echo "Usage: tunnel forward|reverse|list|del [targethost|tunnel-*.service file] [lport] [rport] [luser] [ruser] [sport] [sshkeyname]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "!!! ERROR: must be root (use sudo -i)" && exit 2

if [[ $1 == list ]]; then
    stat -t /etc/systemd/system/tunnel* >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
        /bin/ls -1 /etc/systemd/system/tunnel*
    else
        echo "No systemd tunnel files exit"
    fi
    exit 3
elif [[ $1 == del ]]; then
    SERVF=$(echo $2 | sed -e 's#/etc/systemd/system/##' -e 's#.service##')
    SERVF="/etc/systemd/system/${SERVF}.service"
    if [[ -f $SERVF ]]; then
        systemctl stop $2
        systemctl disable $2 >/dev/null 2>&1
        rm $SERVF
        systemctl daemon-reload
        echo "Removed $SERVF"
    else
        echo "$SERVF does not exist"
    fi
    exit 4
fi

THOST=${2:-$VHOST}
LPORT=${3:-'9999'}
RPORT=${4:-'9999'}
LUSER=${5:-'tunnel'}
RUSER=${6:-'tunnel'}
SPORT=${7:-'9'}
S_KEY=${8:-'id_rsa'}
SOPTS="-v -NTC -o ServerAliveInterval=60 -o ExitOnForwardFailure=yes -o StrictHostKeyChecking=no"

if [[ $1 == forward ]]; then
    T_ARG='-L'
    T_STR=Forward
elif [[ $1 == reverse ]]; then
    T_ARG='-R'
    T_STR=Reverse
else
    echo "Tunnel setup arguments must be either forward, reverse or list"
    exit 5
fi


if [[ ! -d ~/.ssh ]]; then
    echo ">>> Create local ~/.ssh dir"
    mkdir ~/.ssh
    chmod 700 ~/.ssh
fi

if [[ ! $(getent passwd | grep "^$LUSER:") ]]; then
    echo "!!! Create $LUSER user"
    useradd -r -m $LUSER
    su - $LUSER -c "
mkdir .ssh
chmod 700 .ssh
cd .ssh
ssh-keygen -f ~/.ssh/$S_KEY -N '' >/dev/null 2>&1
chmod 600 *
cat $S_KEY.pub"
    echo "
Copy above public key to ~/.ssh/authorized_keys on the remote server, then
test using 'ssh -p $SPORT -i /home/$LUSER/.ssh/$S_KEY $RUSER@$THOST' first"
    exit
fi

service_file() {
   cat << EOS
[Unit]
Description=${T_STR} SSH Tunnel
ConditionPathExists=|/usr/bin
After=network.target

[Service]
Type=simple
User=${LUSER}
#Type=forking
ExecStart=/usr/bin/ssh ${SOPTS} -i ~${LUSER}/.ssh/${S_KEY} ${T_ARG} ${LPORT}:localhost:${RPORT} -p ${SPORT} ${RUSER}@${THOST}
RestartSec=10
Restart=on-success
RestartForceExitStatus=255

#RemainAfterExit=yes
#RestartSec=3
#Restart=always

[Install]
WantedBy=multi-user.target
EOS
}

if [[ $1 == forward || $1 == reverse ]]; then
    service_file $* > /etc/systemd/system/tunnel-${LPORT}-${RPORT}.service
    systemctl daemon-reload
    sleep 1
    systemctl start tunnel-${LPORT}-${RPORT}.service
    systemctl enable tunnel-${LPORT}-${RPORT}.service >/dev/null 2>&1
    echo "Added /etc/systemd/system/tunnel-${LPORT}-${RPORT}.service"
fi

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
