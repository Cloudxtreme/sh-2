#!/usr/bin/env bash
# .sh/bin/addvmail 20170418 - 20180224
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ -z $1 || $1 == '-h' || $1 == '--help' ]] && \
    echo "Usage: addvmail user@domain" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo)" && exit 2

# default VUSER needs to become UUSER
VUSER=${1%@*} # $VUSER @ domain
VHOST=${1#*@} # userid @ $VHOST

source ~/.vhosts/$VHOST || exit 3

MPATH="/home/u/$VHOST/home"

[[ ! -d $MPATH ]] && echo "*** ERROR: $MPATH does not exist" && exit 4

HPATH="$MPATH/$VUSER"

[[ -d $HPATH ]] && echo "*** ERROR: $HPATH already exists" && exit 5

DID=$(cat << EOS | $SQCMD
 SELECT id FROM vhosts
  WHERE domain = '$VHOST'
EOS
)

[[ -z $DID ]] && echo "*** ERROR: $VHOST does not exist" && exit 5

USRID=$(cat << EOS | $SQCMD
 SELECT id FROM vmails
  WHERE user = '$1'
EOS
)

[[ -n $USRID ]] && echo "*** ERROR: '$1' already exists" && exit 5

echo "*** Create $ADMIN.vmails entry ($DTYPE)"
PW=$(doveadm pw -s SHA512-CRYPT -p $UPASS)
DO_VMAIL=$(cat << EOS | $SQCMD
 INSERT INTO vmails (
        did,
        uid,
        gid,
        user,
        home,
        password,
        updated,
        created
) VALUES (
        $DID,
        $U_UID,
        $U_GID,
        'admin@$VHOST',
        '/home/u/$VHOST/home/admin',
        '$PW',
        '$V_CREATED',
        '$V_UPDATED'
)
EOS
)

echo "*** Create $ADMIN.valias entry ($DTYPE)"
DO_VALIAS=$(cat << EOS | $SQCMD
 INSERT INTO valias (
        did,
        source,
        target,
        updated,
        created
) VALUES (
        $DID,
        '@$VHOST',
        'admin@$VHOST',
        '$V_UPDATED',
        '$V_CREATED'
)
EOS
)

if [[ ! -d $HPATH ]]; then
    echo "*** Create $HPATH/{Maildir,sieve}"
    mkdir -p $HPATH/{Maildir,sieve}
fi

if [[ -f $HPATH/sieve/retrain-as-good.sieve ]]; then
    echo "*** $HPATH/sieve/retrain-as-good.sieve already exists"
else
    echo "*** Create $HPATH/sieve/retrain-as-good.sieve"
    cat << 'EOS' > $HPATH/sieve/retrain-as-good.sieve
require ["vnd.dovecot.execute", "environment", "variables", "imapsieve"];
if environment :matches "imap.mailbox" "*" {if string "${1}" "Trash" { stop; }}
execute :pipe "spamprobe" ["-c", "-d", ".spamprobe", "good"];
EOS
fi

if [[ -f $HPATH/sieve/retrain-as-spam.sieve ]]; then
    echo "*** $HPATH/sieve/retrain-as-spam.sieve already exists"
else
    echo "*** Create $HPATH/sieve/retrain-as-spam.sieve"
    cat << 'EOS' > $HPATH/sieve/retrain-as-spam.sieve
require ["vnd.dovecot.execute"];
execute :pipe "spamprobe" ["-c", "-d", ".spamprobe", "spam"];
EOS
fi

if [[ -f $HPATH/sieve/spamprobe.sieve ]]; then
    echo "*** $HPATH/sieve/spamprobe.sieve already exists"
else
    echo "*** Create $HPATH/sieve/spamprobe.sieve"
    cat << 'EOS' > $HPATH/sieve/spamprobe.sieve
require ["vnd.dovecot.execute", "fileinto", "envelope", "variables", "editheader"];
if header :contains "from" ["root@", "daemon@", "postmaster@"] { fileinto "Trash";
} elsif header :contains "to" ["root@", "daemon@", "postmaster@"] { fileinto "Trash"; }
if envelope :localpart :matches "to" "*" { set "lhs" "${1}"; }
if envelope :domain :matches "to" "*" { set "rhs" "${1}"; }
execute :pipe :output "SCORE" "spamprobe" ["-c", "-d", "/home/u/${rhs}/home/${lhs}/.spamprobe", "receive"];
addheader :last "X-Spam" "${SCORE}";
if header :matches "X-Spam" "SPAM*" { fileinto "Spam"; }
EOS
fi

if [[ -f $HPATH/.dovecot.sieve ]]; then
    echo "*** $HPATH/.dovecot.sieve already exists"
else
    echo "*** Create $HPATH/.dovecot.sieve"
    cd $HPATH && ln -s sieve/spamprobe.sieve .dovecot.sieve
fi

if [[ -d $HPATH/.spamprobe ]]; then
    echo "*** $HPATH/.spamprobe already exists"
else
    if [[ ! -d /etc/spamprobe ]]; then
        echo "*** Fetch https://renta.net/public/_etc_spamprobe.tgz"
        cd /etc
        wget -q https://renta.net/public/_etc_spamprobe.tgz
        tar xf _etc_spamprobe.tgz > /dev/null 2>&1
    fi
    echo "*** Create $HPATH/.spamprobe"
    mkdir $HPATH/.spamprobe
    cp -a /etc/spamprobe/* $HPATH/.spamprobe
fi

chown $(stat -c "%u:%g" $MPATH) -R $HPATH

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
