#!/usr/bin/env bash
# .sh/bin/addvhost 20170217 - 201800304
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ $1 =~ -h ]] && \
    echo "Usage: addvhost [uuser@domain|domain] [plan]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

if [[ $1 ]]; then
    if [[ $1 =~ "@" ]]; then
        UUTMP=${1%@*}@ # $UUTMP @ domain
        VHOST=${1#*@}  # userid @ $VHOST
    else
        UUTMP=""
        VHOST=$1
    fi
fi

if [[ ! -f ~/vhosts/$VHOST ]]; then
    echo "!!! Create ~/vhosts/$VHOST config file"
    sethost $UUTMP$VHOST $(newpw 5)
    gethost > ~/.vhosts/$VHOST && chmod 600 ~/.vhosts/$VHOST
fi

source ~/.vhosts/$VHOST

[[ ! -d $VPATH ]] && echo "!!! ERROR: setup server first" && exit 4

# This has to be moved into a database
if [[ $3 == enterprise ]]; then
    V_ALIASES="200"
    V_DISKQUOTA="204800000"
    V_MAILBOXES="20"
    V_MAILQUOTA="102400000"
elif [[ $3 == business ]]; then
    V_ALIASES="100"
    V_DISKQUOTA="102400000"
    V_MAILBOXES="10"
    V_MAILQUOTA="51200000"
elif [[ $3 == soho ]]; then
    V_ALIASES="20"
    V_DISKQUOTA="10240000"
    V_MAILBOXES="2"
    V_MAILQUOTA="51200000"
else
    V_ALIASES="10"
    V_DISKQUOTA="1024000"
    V_MAILBOXES="1"
    V_MAILQUOTA="512000"
fi

V_CREATED=$(date +"%Y-%m-%d %H:%M:%S")
V_UPDATED=$V_CREATED

IS_VHOST=$(cat << EOS | $SQCMD
 SELECT COUNT(*) FROM vhosts
  WHERE domain = '$VHOST'
EOS
)

[[ $IS_VHOST -gt 0 ]] && echo "!!! ERROR: $VHOST already exists" && exit 6

if [[ $(grepuser ":$VHOST:") ]]; then
    echo "!!! Warning: $UUSER for $VHOST already exists"
else
    echo "!!! Create $UUSER user"
    U_GRP=$([[ $U_UID = 1000 ]] && echo "-G sudo,adm")
    useradd -M -U -s $U_SHL -u $U_UID -d $UPATH -c $VHOST $U_GRP $UUSER
    [[ -n $UPASS && $UPASS != $APASS ]] && { echo $UUSER:$UPASS | chpasswd; }
fi

echo "!!! Create entry in $ADMIN.vhosts ($DTYPE)"
DO_VHOST=$(cat << EOS | $SQCMD
 INSERT INTO vhosts (
        active,
        aliases,
        created,
        diskquota,
        domain,
        gid,
        mailboxes,
        mailquota,
        uid,
        uname,
        updated
) VALUES (
        1,
        $V_ALIASES,
        '$V_CREATED',
        $V_DISKQUOTA,
        '$VHOST',
        $U_GID,
        $V_MAILBOXES,
        $V_MAILQUOTA,
        $U_UID,
        '$UUSER',
        '$V_CREATED'
)
EOS
)

DID=$(cat << EOS | $SQCMD
 SELECT id FROM vhosts
  WHERE domain = '$VHOST'
EOS
)

YM=$(date +"%Y%m")

echo "!!! Create $VHOST entry in $ADMIN.logging ($DTYPE)"
DO_VHOSTLOG=$(cat << EOS | $SQCMD
 INSERT INTO logging (
        did,
        name,
        month
) VALUES (
        $DID,
        '$VHOST',
        '$YM'
)
EOS
)

echo "!!! Create admin@$VHOST entry in $ADMIN.logging ($DTYPE)"
DO_VMAILLOG=$(cat << EOS | $SQCMD
 INSERT INTO logging (
        did,
        name,
        month
) VALUES (
        $DID,
        'admin@$VHOST',
        '$YM'
)
EOS
)

if [[ -d $C_WEB && -d $C_FPM ]]; then
    if [ -f $C_FPM/pool.d/$VHOST.conf ]; then
        echo "!!! $C_FPM/pool.d/$VHOST.conf already exists"
    else
        echo "!!! Create $C_FPM/pool.d/$VHOST.conf"
        cat << EOS > $C_FPM/pool.d/$VHOST.conf
[$VHOST]
user = $U_UID
group = $U_GID
include = $C_FPM/common.conf
EOS
        if [ -f $C_FPM/pool.d/www.conf ]; then
            echo "!!! Rename $C_FPM/pool.d/www.conf $C_FPM/www.conf"
            mv $C_FPM/pool.d/www.conf $C_FPM
        fi
    fi
fi

if [[ -d $UPATH ]]; then
    echo "!!! Warning: $UPATH already exists"
else
    echo "!!! Create $UPATH"
    mkdir -p $UPATH/{.ssh,.nano,.wp-cli,bin,etc,home,home/admin,home/u,var/log,var/run,var/tmp,var/www,var/www/private,var/www/public}
fi

if [[ -f $UPATH/.ssh/authorized_keys ]]; then
    echo "!!! $UPATH/.ssh/authorized_keys already exists"
else
    if [[ -f ~/.ssh/id_rsa.pub ]]; then
        echo "!!! Setup $UPATH/.ssh/authorized_keys with ~/.ssh/id_rsa.pub"
        cp ~/.ssh/id_rsa.pub $UPATH/.ssh/authorized_keys
    elif [[ -f ~/.ssh/authorized_keys ]]; then
        echo "!!! Setup $UPATH/.ssh/authorized_keys with ~/.ssh/authorized_keys"
        cp ~/.ssh/authorized_keys $UPATH/.ssh/authorized_keys
    else
        echo "!!! Warning: no ~/.ssh/authorized_keys or ~/.ssh/id_rsa.pub"
    fi
    [[ ! -f $UPATH/.hushlogin ]] && touch $UPATH/.hushlogin
fi

if [[ -L $UPATH/home/u/$VHOST ]]; then
    echo "!!! $UPATH/home/u/$VHOST already exists"
else
    echo "!!! Create custom chroot symlink"
    cd $UPATH/home/u
    ln -s ../.. $VHOST
fi

if [[ -f $UPATH/bin/busybox ]]; then
    echo "!!! $UPATH/bin/busybox already exists"
else
    echo "!!! Setup busybox with sh, hostname, tail symlinks"
    cp /bin/busybox $UPATH/bin
    cd $UPATH/bin
    ln -s busybox sh
    ln -s busybox hostname
    ln -s busybox tail
fi

if [[ -f $UPATH/.profile ]]; then
    echo "!!! $UPATH/.profile already exists"
else
    echo "!!! Create $UPATH/.profile"
    cat << EOS > $UPATH/.profile
export PS1="\[\033[1;35m\]\$LOGNAME@$HOSTNAME \w\[\033[0m\] "
alias la='ls -lA -F --color'
alias ll='ls -l -F --color'
alias ls='ls -F --color'
EOS
fi

if [[ -f $UPATH/etc/passwd ]]; then
    echo "!!! $UPATH/etc/passwd already exists"
else
    echo "!!! Create $UPATH/etc/passwd"
    cat << EOS > $UPATH/etc/passwd
root:x:0:0:::
$WWWUSER:x:33:33:::
$UUSER:x:$U_UID:$U_GID:::
EOS
fi

if [[ -f $UPATH/etc/group ]]; then
    echo "!!! $UPATH/etc/group already exists"
else
    echo "!!! Create $UPATH/etc/group"
    cat << EOS > $UPATH/etc/group
root:x:0:
www-data:x:33:
$UUSER:x:$U_GID:
EOS
fi

if [[ -f $WPATH/index.html || -f $WPATH/index.php ]]; then
    [[ -f $WPATH/index.html ]] && echo "!!! $WPATH/index.html already exists"
    [[ -f $WPATH/index.php ]] && echo "!!! $WPATH/index.php already exists"
else
    echo "!!! Create $WPATH/index.html"
    echo "<!DOCTYPE html><title>$VHOST</title><h1 style=\"text-align:center\">$VHOST</h1>" > $WPATH/index.html
fi

if [[ -f $WPATH/phpinfo.php ]]; then
    echo "!!! $WPATH/phpinfo.php already exists"
else
    echo "!!! Create $WPATH/phpinfo.php"
    echo "<?php error_log(__FILE__.' '.\$_SERVER['REMOTE_ADDR']); phpinfo();" > $WPATH/phpinfo.php
fi

if [[ -f $WPATH/private/.htpasswd ]]; then
    echo "!!! $WPATH/private/.htpasswd already exists"
else
    echo "!!! Create $WPATH/private/.htpasswd guest/letmein"
    cat << 'EOS' > $WPATH/private/.htpasswd
guest:$apr1$OH0WIbVa$21Bj05X1rO5zale7bv1971
EOS
fi

addvmail admin@$VHOST
chperms $VHOST
logging $VHOST $DTYPE update

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
