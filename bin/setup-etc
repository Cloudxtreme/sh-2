#!/usr/bin/env bash
# .sh/bin/setup-etc 20151231 - 20180317
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ $1 =~ '-h' ]] && echo "Usage: setup-etc [mysql(default)|sqlite]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

source /root/.shrc || exit 3
echo "???????????????????????? DPASS=$DPASS"

DTYPE=${1:-$DTYPE}

# Temporary self-signed SSL certificate defaults
C="AU"
ST="QLD"
L="GoldCoast"
O="NetServa"
OU="IT Department"

if [[ $DTYPE == sqlite ]]; then
    SQCMD=$EXSQL
elif [[ $DTYPE == mysql ]]; then
    SQCMD=$EXMYS
else
    echo "ERROR: unknown argument DTYPE='$DTYPE'" && exit 2
fi

if [[ -n $(grep ^ubuntu /etc/passwd) ]]; then
    echo "^^^ Remove default ubuntu user"
    userdel -rf ubuntu > /dev/null 2>&1
fi

if [[ ! -f $CSMTP/main.cf.orig ]]; then
    echo "^^^ Create $CSMTP/main.cf for $DTYPE"
    mv $CSMTP/main.cf $CSMTP/main.cf.orig
    sed -e "s;_VHOST;$VHOST;" \
        ~/.sh/etc/_etc_postfix_main.cf > $CSMTP/main.cf
    if [[ $DTYPE == sqlite ]]; then
        echo "^^^ Append SQLite details to $CSMTP/main.cf"
        cat ~/.sh/etc/_etc_postfix_main_sqlite.cf >> $CSMTP/main.cf
    elif [[ $DTYPE == mysql ]]; then
        echo "^^^ Append MySQL details to $CSMTP/main.cf"
        cat ~/.sh/etc/_etc_postfix_main_mysql.cf >> $CSMTP/main.cf
    fi
    chmod 644 $CSMTP/main.cf
fi

if [[ ! -f $CSMTP/master.cf.orig ]]; then
    echo "^^^ Create $CSMTP/master.cf"
    mv $CSMTP/master.cf $CSMTP/master.cf.orig
    cp ~/.sh/etc/_etc_postfix_master.cf $CSMTP/master.cf
    chmod 644 $CSMTP/master.cf
fi

if [[ $DTYPE == sqlite ]]; then
    if [[ ! -f $CSMTP/sqlite-alias-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-alias-maps.cf"
        sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-alias-maps.cf \
            > $CSMTP/sqlite-alias-maps.cf
    fi
    if [[ ! -f $CSMTP/sqlite-gid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-gid-maps.cf"
        sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-gid-maps.cf \
            > $CSMTP/sqlite-gid-maps.cf
    fi
    if [[ ! -f $CSMTP/sqlite-mailbox-domains.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-mailbox-domains.cf"
        sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-mailbox-domains.cf \
            > $CSMTP/sqlite-mailbox-domains.cf
    fi
    if [[ ! -f $CSMTP/sqlite-mailbox-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-mailbox-maps.cf"
        sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-mailbox-maps.cf \
            > $CSMTP/sqlite-mailbox-maps.cf
    fi
    if [[ ! -f $CSMTP/sqlite-uid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-uid-maps.cf"
        sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-uid-maps.cf \
            > $CSMTP/sqlite-uid-maps.cf
    fi
elif [[ $DTYPE == mysql ]]; then
    if [[ ! -f $CSMTP/mysql-alias-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-alias-maps.cf"
        sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-alias-maps.cf \
            > $CSMTP/mysql-alias-maps.cf
    fi
    if [[ ! -f $CSMTP/mysql-gid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-gid-maps.cf"
        sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-gid-maps.cf \
            > $CSMTP/mysql-gid-maps.cf
    fi
    if [[ ! -f $CSMTP/mysql-mailbox-domains.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-mailbox-domains.cf"
        sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-mailbox-domains.cf \
            > $CSMTP/mysql-mailbox-domains.cf
    fi
    if [[ ! -f $CSMTP/mysql-mailbox-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-mailbox-maps.cf"
        sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-mailbox-maps.cf \
            > $CSMTP/mysql-mailbox-maps.cf
     fi
     if [[ ! -f $CSMTP/mysql-uid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-uid-maps.cf"
        sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-uid-maps.cf \
            > $CSMTP/mysql-uid-maps.cf
     fi
fi

if [[ ! -f $CIMAP/dovecot.conf.orig ]]; then
    echo "^^^ Create $CIMAP/dovecot.conf for $DTYPE"
    mv -f $CIMAP/dovecot.conf $CIMAP/dovecot.conf.orig
    sed -e "s;_VHOST;$VHOST;" \
        ~/.sh/etc/_etc_dovecot_dovecot.conf > $CIMAP/dovecot.conf
    if [[ $DTYPE == sqlite ]]; then
        echo "^^^ Append SQLite details to $CIMAP/dovecot.conf"
        cat ~/.sh/etc/_etc_dovecot_dovecot.conf-sqlite >> $CIMAP/dovecot.conf
    elif [[ $DTYPE == mysql ]]; then
        echo "^^^ Append MySQL details to $CIMAP/dovecot.conf"
        cat ~/.sh/etc/_etc_dovecot_dovecot.conf-mysql >> $CIMAP/dovecot.conf
    fi
fi

if [[ $DTYPE == sqlite ]]; then
    if [[ ! -f $CIMAP/user-sqlite.conf ]]; then
        echo "^^^ Create $CIMAP/user-sqlite.conf"
        sed -e "s;_DTYPE;$DTYPE;" -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_dovecot_user-sqlite.conf \
            > $CIMAP/user-sqlite.conf
    fi
elif [[ $DTYPE == mysql ]]; then
    if [[ ! -f $CIMAP/user-mysql.conf ]]; then
        echo "^^^ Create $CIMAP/user-mysql.conf"
        sed -e "s/_DTYPE/$DTYPE/" -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_dovecot_user-mysql.conf \
            > $CIMAP/user-mysql.conf
    fi
fi

if [[ ! -d $CIMAP/sieve ]]; then
    echo "^^^ Create $CIMAP/sieve/spamprobe symlink"
    mkdir $CIMAP/sieve
    cd $CIMAP/sieve
    ln -s /usr/bin/spamprobe $CIMAP/sieve/spamprobe
fi

if [[ ! -f $C_WEB/common.conf ]]; then
    echo "^^^ Create $C_WEB/common.conf"
    cp ~/.sh/etc/_etc_nginx_common.conf $C_WEB/common.conf
fi

if [[ ! -f $C_WEB/common-auth.conf ]]; then
    echo "^^^ Create $C_WEB/common-auth.conf"
    cp ~/.sh/etc/_etc_nginx_common-auth.conf $C_WEB/common-auth.conf
fi

if [[ ! -f $C_WEB/nginx.conf.orig ]]; then
    echo "^^^ Create $C_WEB/nginx.conf"
    mv $C_WEB/nginx.conf $C_WEB/nginx.conf.orig
    cp ~/.sh/etc/_etc_nginx_nginx.conf $C_WEB/nginx.conf
fi

if [[ ! -f $C_WEB/sites-enabled/_localhost ]]; then
    echo "^^^ Create $C_WEB/sites-enabled/_localhost"
    cp ~/.sh/etc/_etc_nginx_sites-enabled__localhost $C_WEB/sites-enabled/_localhost
fi

if [[ ! -f /etc/opendkim.conf.orig ]]; then
    echo "^^^ Create /etc/opendkim.conf"
    mv /etc/opendkim.conf /etc/opendkim.conf.orig
    cp ~/.sh/etc/_etc_opendkim.conf /etc/opendkim.conf
fi

if [[ ! -f $C_FPM/common.conf ]]; then
    echo "^^^ Create $C_FPM/common.conf"
    cp ~/.sh/etc/_etc_php_7.0_fpm_common.conf $C_FPM/common.conf
fi

if [[ ! -f $C_FPM/php.ini.orig ]]; then
    echo "^^^ Modify $C_FPM/php.ini"
    cp $C_FPM/php.ini $C_FPM/php.ini.orig
    sed -i $C_FPM/php.ini \
        -e 's/;opcache.enable=1/opcache.enable=1/' \
        -e 's/;opcache.enable_cli=0/opcache.enable_cli=1/' \
        -e 's/;opcache.interned_strings_buffer=8/opcache.interned_strings_buffer=8/' \
        -e 's/;opcache.max_accelerated_files=10000/opcache.max_accelerated_files=10000/' \
        -e 's/;opcache.memory_consumption=128/opcache.memory_consumption=128/' \
        -e 's/;opcache.save_comments=1/opcache.save_comments=1/' \
        -e 's/;opcache.revalidate_freq=2/opcache.revalidate_freq=1/'
fi

# TODO switch between mysql/sqlite
if [[ ! -f $C_DNS/pdns.conf.orig ]]; then
    echo "^^^ Create $C_DNS/pdns.conf"
    mv $C_DNS/pdns.conf $C_DNS/pdns.conf.orig
    cp ~/.sh/etc/_etc_powerdns_pdns.conf $C_DNS/pdns.conf
fi

if [[ ! -f /etc/sudoers.d/99-sysadm ]]; then
    echo "^^^ Create /etc/sudoers.d/99-sysadm"
    cp ~/.sh/etc/_etc_sudoers.d_99-sysadm /etc/sudoers.d/99-sysadm
fi

if [[ ! -f /etc/systemd/system/opendkim.service ]]; then
    echo "^^^ Create /etc/systemd/system/opendkim.service"
    cp ~/.sh/etc/_etc_systemd_system_opendkim.service /etc/systemd/system/opendkim.service
    systemctl daemon-reload
    systemctl restart opendkim
fi

if [[ ! -f /etc/ssh/sshd_config.orig ]]; then
    echo "^^^ Create new /etc/ssh/sshd_config"
    mv /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
    cp ~/.sh/etc/_etc_ssh_sshd__config /etc/ssh/sshd_config
    systemctl restart ssh
fi

if [[ ! -f $C_SSL/dhparams.pem ]]; then
    echo "^^^ Create dhparams.pem"
    openssl dhparam -dsaparam -out $C_SSL/dhparams.pem 2048 > /dev/null 2>&1
fi

# Firefox no longer works with a self-signed cert so don't use one
if [[ ! -f $C_WEB/sites-enabled/_default.nossl && ! -f $C_WEB/sites-enabled/_default ]]; then
    echo "^^^ Create generic non-SSL Port 80 nginx config"
    cp ~/.sh/etc/_etc_nginx_sites-enabled__default.nossl $C_WEB/sites-enabled/_default.nossl
    [[ -h $C_WEB/sites-enabled/default ]] && rm $C_WEB/sites-enabled/default
fi

# This is still needed for postfix and dovecot
if [[ ! -d $C_SSL/$VHOST ]]; then
    echo "^^^ Create temporary self-signed certificate for $VHOST"
    [[ ! -d $C_SSL/$VHOST ]] && mkdir $C_SSL/$VHOST
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -subj "/C=$C/ST=$ST/L=$L/O=$O/OU=$OU/CN=$VHOST" \
        -keyout /etc/ssl/$VHOST/privkey.pem \
        -out /etc/ssl/$VHOST/fullchain.pem > /dev/null 2>&1
fi

# Missing from Ubuntu nginx installation
if [[ ! -f /usr/share/nginx/html/50x.html ]]; then
    echo "^^^ Create /usr/share/nginx/html/50x.html"
    [[ ! -d /usr/share/nginx/html ]] && mkdir -p /usr/share/nginx/html
    cp ~/.sh/etc/_usr_share_nginx_html_50x.html
    chmod 644 /usr/share/nginx/html/50x.html
fi

serva restart web
serva restart mail

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
