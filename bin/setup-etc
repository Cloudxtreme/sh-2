#!/usr/bin/env bash
# .sh/bin/setup-etc 20151231 - 20180222
# Copyright (C) 1995-2017 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ $1 == '-h' || $1 == '--help' ]] && \
    echo "Usage: setup-etc [mysql(default)|sqlite]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "ERROR: must be root (use sudo -i)" && exit 2

source ~/.defaults || exit 3

DTYPE=${1:-$DTYPE}

# Temporary self-signed SSL certificate defaults
C="AU"
ST="QLD"
L="GoldCoast"
O="NetServa"
OU="IT Department"
IP4_0=$(hostname -i|cut -d ' ' -f -1)

if [[ -d $VPATH ]]; then
    echo "^^^ $VPATH already exists"
else
    echo "^^^ Create $VPATH"
    mkdir $VPATH
fi

if [[ $DTYPE == sqlite ]]; then
    echo "^^^ Setup using SQLite"
    SQCMD=$EXSQL
    [[ ! -d $DBSQL ]] && setup-db sqlite
elif [[ $DTYPE == mysql ]]; then
    echo "^^^ Setup using MySQL"
    SQCMD=$EXMYS
    [[ ! -f ~/.my.cnf ]] && setup-db mysql
else
    echo "ERROR: unknown argument '$DTYPE'" && exit 2
fi

if [[ -n $(grep ^ubuntu /etc/passwd) ]]; then
    echo "^^^ Remove default ubuntu user"
    userdel -rf ubuntu > /dev/null 2>&1
fi

echo "^^^ Create $CSMTP/main.cf for $DTYPE"
[[ ! -f $CSMTP/main.cf.orig ]] && mv $CSMTP/main.cf $CSMTP/main.cf.orig
$SUDO sed -e "s;_VHOST;$VHOST;" \
    ~/.sh/etc/_etc_postfix_main.cf \
    > $CSMTP/main.cf

if [[ $DTYPE == sqlite ]]; then
    cat ~/.sh/etc/_etc_postfix_main_sqlite.cf >> $CSMTP/main.cf
elif [[ $DTYPE == mysql ]]; then
    cat ~/.sh/etc/_etc_postfix_main_mysql.cf >> $CSMTP/main.cf
fi
$SUDO chmod 644 $CSMTP/main.cf

if [[ $DTYPE == sqlite ]]; then
    if [[ ! -f $CSMTP/sqlite-alias-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-alias-maps.cf"
        $SUDO sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-alias-maps.cf \
            > $CSMTP/sqlite-alias-maps.cf
    fi
    if [[ ! -f $CSMTP/sqlite-gid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-gid-maps.cf"
        $SUDO sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-gid-maps.cf \
            > $CSMTP/sqlite-gid-maps.cf
    fi
    if [[ ! -f $CSMTP/sqlite-mailbox-domains.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-mailbox-domains.cf"
        $SUDO sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-mailbox-domains.cf \
            > $CSMTP/sqlite-mailbox-domains.cf
    fi
    if [[ ! -f $CSMTP/sqlite-mailbox-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-mailbox-maps.cf"
        $SUDO sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-mailbox-maps.cf \
            > $CSMTP/sqlite-mailbox-maps.cf
    fi
    if [[ ! -f $CSMTP/sqlite-uid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/sqlite-uid-maps.cf"
        $SUDO sed -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_postfix_sqlite-uid-maps.cf \
            > $CSMTP/sqlite-uid-maps.cf
    fi
elif [[ $DTYPE == mysql ]]; then
    if [[ ! -f $CSMTP/mysql-alias-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-alias-maps.cf"
        $SUDO sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-alias-maps.cf \
            > $CSMTP/mysql-alias-maps.cf
    fi
    if [[ ! -f $CSMTP/mysql-gid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-gid-maps.cf"
        $SUDO sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-gid-maps.cf \
            > $CSMTP/mysql-gid-maps.cf
    fi
    if [[ ! -f $CSMTP/mysql-mailbox-domains.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-mailbox-domains.cf"
        $SUDO sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-mailbox-domains.cf \
            > $CSMTP/mysql-mailbox-domains.cf
    fi
    if [[ ! -f $CSMTP/mysql-mailbox-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-mailbox-maps.cf"
        $SUDO sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-mailbox-maps.cf \
            > $CSMTP/mysql-mailbox-maps.cf
     fi
     if [[ ! -f $CSMTP/mysql-uid-maps.cf ]]; then
        echo "^^^ Create $CSMTP/mysql-uid-maps.cf"
        $SUDO sed -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_postfix_mysql-uid-maps.cf \
            > $CSMTP/mysql-uid-maps.cf
     fi
fi

echo "^^^ Create $CIMAP/dovecot.conf for $DTYPE"
[[ ! -f $CIMAP/dovecot.conf.orig ]] && $SUDO mv -f $CIMAP/dovecot.conf $CIMAP/dovecot.conf.orig
$SUDO sed -e "s;_VHOST;$VHOST;" \
    ~/.sh/etc/_etc_dovecot_dovecot.conf \
    > $CIMAP/dovecot.conf

if [[ $DTYPE == sqlite ]]; then
    cat ~/.sh/etc/_etc_dovecot_dovecot.conf-sqlite >> $CIMAP/dovecot.conf
elif [[ $DTYPE == mysql ]]; then
    cat ~/.sh/etc/_etc_dovecot_dovecot.conf-mysql >> $CIMAP/dovecot.conf
fi

if [[ $DTYPE == sqlite ]]; then
    if [[ ! -f $CIMAP/user-sqlite.conf ]]; then
        echo "^^^ Create $CIMAP/user-sqlite.conf"
        $SUDO sed -e "s;_DTYPE;$DTYPE;" -e "s;_DPATH;$DPATH;" \
            ~/.sh/etc/_etc_dovecot_user-sqlite.conf \
            > $CIMAP/user-sqlite.conf
    fi
elif [[ $DTYPE == mysql ]]; then
    if [[ ! -f $CIMAP/user-mysql.conf ]]; then
        echo "^^^ Create $CIMAP/user-mysql.conf"
        $SUDO sed -e "s/_DTYPE/$DTYPE/" -e "s/_DHOST/$DHOST/" -e "s/_DNAME/$ADMIN/" \
            -e "s/_DUSER/$ADMIN/" -e "s/_DPASS/$DPASS/" \
            ~/.sh/etc/_etc_dovecot_user-mysql.conf \
            > $CIMAP/user-mysql.conf
    fi
fi

if [[ ! -d $CIMAP/sieve ]]; then
    echo "^^^ Create $CIMAP/sieve/spamprobe symlink"
    $SUDO mkdir $CIMAP/sieve
    $SUDO cd $CIMAP/sieve
    $SUDO ln -s /usr/bin/spamprobe $CIMAP/sieve/spamprobe
fi

if [[ ! -f /etc/apt/sources.list.orig ]]; then
    echo "^^^ Create /etc/apt/sources.list"
    $SUDO mv /etc/apt/sources.list /etc/apt/sources.list.orig
    $SUDO cp ~/.sh/etc/_etc_apt_sources.list /etc/apt/sources.list
fi

if [[ ! -f $C_WEB/common.conf ]]; then
    echo "^^^ Create $C_WEB/common.conf"
    $SUDO cp ~/.sh/etc/_etc_nginx_common.conf $C_WEB/common.conf
fi

if [[ ! -f $C_WEB/common-auth.conf ]]; then
    echo "^^^ Create $C_WEB/common-auth.conf"
    $SUDO cp ~/.sh/etc/_etc_nginx_common-auth.conf $C_WEB/common-auth.conf
fi

if [[ ! -f $C_WEB/nginx.conf.orig ]]; then
    echo "^^^ Create $C_WEB/nginx.conf"
    $SUDO mv $C_WEB/nginx.conf $C_WEB/nginx.conf.orig
    $SUDO cp ~/.sh/etc/_etc_nginx_nginx.conf $C_WEB/nginx.conf
fi

if [[ -h $C_WEB/sites-enabled/default ]]; then
    echo "^^^ Create $C_WEB/sites-enabled/_default"
    $SUDO rm $C_WEB/sites-enabled/default
    $SUDO cp ~/.sh/etc/_etc_nginx_sites-enabled__default $C_WEB/sites-enabled/_default
fi

if [[ ! -f $C_WEB/sites-enabled/_localhost ]]; then
    echo "^^^ Create $C_WEB/sites-enabled/_localhost"
    $SUDO cp ~/.sh/etc/_etc_nginx_sites-enabled__localhost $C_WEB/sites-enabled/_localhost
fi

if [[ ! -f /etc/opendkim.conf.orig ]]; then
    echo "^^^ Create /etc/opendkim.conf"
    mv /etc/opendkim.conf /etc/opendkim.conf.orig
    $SUDO cp ~/.sh/etc/_etc_opendkim.conf /etc/opendkim.conf
fi

if [[ ! -f $C_FPM/common.conf ]]; then
    echo "^^^ Create $C_FPM/common.conf"
    $SUDO cp ~/.sh/etc/_etc_php_7.0_fpm_common.conf $C_FPM/common.conf
fi

if [[ ! -f $CSMTP/master.cf.orig ]]; then
    echo "^^^ Create $CSMTP/master.cf"
    $SUDO mv $CSMTP/master.cf $CSMTP/master.cf.orig
    $SUDO cp ~/.sh/etc/_etc_postfix_master.cf $CSMTP/master.cf
fi

# TODO switch between mysql/sqlite
if [[ ! -f $C_DNS/pdns.conf.orig ]]; then
    echo "^^^ Create $C_DNS/pdns.conf"
    $SUDO mv $C_DNS/pdns.conf $C_DNS/pdns.conf.orig
    $SUDO cp ~/.sh/etc/_etc_powerdns_pdns.conf $C_DNS/pdns.conf
fi

if [[ ! -f /etc/sudoers.d/99-sysadm ]]; then
    echo "^^^ Create /etc/sudoers.d/99-sysadm"
    cp ~/.sh/etc/_etc_sudoers.d_99-sysadm /etc/sudoers.d/99-sysadm
fi

if [[ ! -f /etc/systemd/system/opendkim.service ]]; then
    echo "^^^ Create /etc/systemd/system/opendkim.service"
    $SUDO cp ~/.sh/etc/_etc_systemd_system_opendkim.service /etc/systemd/system/opendkim.service
    $SUDO systemctl daemon-reload
    $SUDO systemctl restart opendkim
fi

if [[ ! -f /etc/ssh/sshd_config.orig ]]; then
    echo "^^^ Create new /etc/ssh/sshd_config"
    $SUDO mv /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
    cat << EOS | $SUDO tee /etc/ssh/sshd_config > /dev/null
Port 9
MaxAuthTries 3
MaxSessions 3
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
MaxStartups 1
AcceptEnv LANG LC_*
Subsystem sftp internal-sftp -u 0027
Match User u*
  ChrootDirectory %h
  X11Forwarding no
  AllowTcpForwarding no
EOS
    $SUDO systemctl restart ssh
fi

if [[ ! -f $C_SSL/dhparams.pem ]]; then
    echo "^^^ Create dhparams.pem"
    openssl dhparam -dsaparam -out $C_SSL/dhparams.pem 2048 > /dev/null
fi

if [[ ! -d $C_SSL/$VHOST ]]; then
    echo "^^^ Create temporary self-signed certificate for $VHOST"
    [[ ! -d $C_SSL/$VHOST ]] && $SUDO mkdir $C_SSL/$VHOST
    $SUDO openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -subj "/C=$C/ST=$ST/L=$L/O=$O/OU=$OU/CN=$VHOST" \
        -keyout /etc/ssl/$VHOST/privkey.pem \
        -out /etc/ssl/$VHOST/fullchain.pem > /dev/null 2>&1

    if [[ ! -f $C_WEB/sites-enabled/$VHOST.selfsigned ]]; then
        cat << EOS | $SUDO tee $C_WEB/sites-enabled/$VHOST.selfsigned > /dev/null
server {
    listen                      443 ssl http2;
    server_name                 $VHOST;
    set                         \$domain $VHOST;
    include                     $C_WEB/common.conf;
    ssl_certificate             $C_SSL/$VHOST/fullchain.pem;
    ssl_certificate_key         $C_SSL/$VHOST/privkey.pem;
    ssl_stapling                off;
    ssl_stapling_verify         off;
}
EOS
    fi
fi

# Missing from Ubuntu nginx installation
if [[ ! -f /usr/share/nginx/html/50x.html ]]; then
    echo "^^^ Create /usr/share/nginx/html/50x.html"
    cat << EOS | $SUDO tee /usr/share/nginx/html/50x.html > /dev/null
<!DOCTYPE html>
<html>
<head>
<title>Error</title>
<style>
body { width: 35em; margin: 0 auto; font-family: sans-serif; }
</style>
</head>
<body>
<h1>An error occurred.</h1>
<p>Sorry, the page you are looking for is currently unavailable.<br/>
Please try again later.</p>
<p>If you are the system administrator of this resource then you should check
the <a href="http://nginx.org/r/error_log">error log</a> for details.</p>
<p><em>Faithfully yours, nginx.</em></p>
</body>
</html>
EOS
fi

serva restart web
serva restart php
serva restart mail

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
