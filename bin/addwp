#!/usr/bin/env bash
# .sh/bin/addwp 20160231 - 20180203
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

[[ -z $1 ]] && echo "Usage: addwp user@domain|domain [wp_passwd] [db_passwd] [path]" && exit 1

source ~/.defaults || exit 2

[[ ! -d $VPATH ]] && echo "!!! ERROR: $VPATH does NOT exist, run 'setup-host' first" && exit 3

WPASS=${2:-$WPASS}
DPASS=${3:-$DPASS}
FPATH=${4:-''}
WUSER=$(pwgen 6 -s -B -C -N 1 -A -0) # unique 6 char Wordpress login ID

sethost $1 $WPASS $DPASS
TITLE=$(echo $VHOST|tr 'a-z' 'A-Z')

[[ ! -d $WPATH ]] && echo "!!! ERROR: $WPATH does NOT exist, run 'addvhost' first" && exit 2

[[ -d $C_SSL/$VHOST ]] && SCHEME="https://" || SCHEME="http://"

if [[ $FPATH ]]; then
    WPURL=$SCHEME$VHOST/$FPATH
    FPATH=$WPATH/$FPATH
else
    WPURL=$SCHEME$VHOST
    FPATH=$WPATH
fi

[[ -d $UPATH/var/public ]] && mv $UPATH/var/public $WPATH
[[ -d $UPATH/var/private ]] && mv $UPATH/var/private $WPATH

if [[ ! -x /usr/local/bin/wp ]]; then
    echo "!!! Install wp-cli as /usr/local/bin/wp"
    curl -s -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x wp-cli.phar
    mv wp-cli.phar /usr/local/bin/wp
fi

if [[ $(mysql -BNe "SHOW DATABASES LIKE '$DNAME'") ]]; then
    echo "!!! '$DNAME' database already exists"
else
    echo "!!! Create $DNAME database"
    mysql -e "CREATE DATABASE IF NOT EXISTS $DNAME"
    mysql -e "GRANT ALL PRIVILEGES ON $DNAME.* TO '$DUSER'@'localhost' IDENTIFIED BY '$DPASS'";
    mysql -e "FLUSH PRIVILEGES"
fi

if [ ! -f "$FPATH/wp-config-sample.php" ]; then
    echo "!!! Download Wordpress"
    cd $UPATH/var
    if [[ ! -f latest.tar.gz ]]; then
        wget -nv --no-check-certificate https://wordpress.org/latest.tar.gz
    fi
    tar xf latest.tar.gz
    rm latest.tar.gz
    if [[ -d $FPATH ]]; then
        [[ -d ${FPATH}_old ]] && rm -rf ${FPATH}_old
        mv $FPATH ${FPATH}_old
    fi
    mv wordpress $FPATH
    chown $U_UID:www-data -R $FPATH
fi

# Add 2> /dev/null to remove wp-cli permission warnings
if [[ -f $FPATH/wp-includes/version.php ]]; then
    echo "!!! Setting up Wordpress"
    su - $VUSER -c "
cd $FPATH
wp core config --dbname='$DNAME' --dbuser='$DUSER' --dbpass='$DPASS'
wp core install \
  --url='$WPURL' \
  --title='$TITLE' \
  --admin_user='$WUSER' \
  --admin_password='$WPASS' \
  --admin_email='$AMAIL'

wp user update '$WUSER' \
  --first_name='${ANAME% *}' \
  --last_name='${ANAME#* }' \
  --display_name='$ANAME' \
  --user_url='$WPURL'

wp option update timezone_string '$TAREA/$TCITY'
wp option update thumbnail_size_w '300'
wp option update permalink_structure '/%postname%/'
wp option set default_comment_status closed
"

export PLUGINS=$(echo $(su $VUSER -c "wp plugin list --field=name --path=$FPATH"))
export PAGES=$(su $VUSER -c "wp post list --post_type=page --format=ids --path=$FPATH")
export POSTS=$(su $VUSER -c "wp post list --post_type=post --format=ids --path=$FPATH")

#export THEMES=$(echo $(su $VUSER -c "wp theme list --field=name --path=$FPATH"))
#export WIDGETS=$(su $VUSER -c "wp widget list sidebar-1 --format=ids --path=$FPATH")
#wp widget delete $WIDGETS

    su - $VUSER -c "
cd $FPATH
wp theme delete twentyfifteen twentysixteen
wp plugin delete $PLUGINS
wp post delete $POSTS
wp post delete $PAGES

echo 'Install astra theme'
wp theme --quiet install astra 2> /dev/null
echo 'Install astra-child theme'
wp scaffold child-theme astra-child --parent_theme=astra --theme_name='Astra Child Theme' --activate 2> /dev/null
wp theme delete twentyseventeen
echo 'Install astra-sites plugin'
wp plugin --quiet install astra-sites --activate 2> /dev/null
echo 'Install elementor plugin'
wp plugin --quiet install elementor --activate 2> /dev/null
echo 'Install header-footer-elementor plugin'
wp plugin --quiet install header-footer-elementor --activate 2> /dev/null
echo 'Install contact-form-7 plugin'
wp plugin --quiet install contact-form-7 --activate 2> /dev/null
echo 'Install user-switching plugin'
wp plugin --quiet install user-switching --activate 2> /dev/null
echo 'Install woocommerce plugin'
wp plugin --quiet install woocommerce 2> /dev/null
echo 'Install autoptimize plugin'
wp plugin --quiet install autoptimize 2> /dev/null
echo 'Install wp-super-cache plugin'
wp plugin --quiet install wp-super-cache 2> /dev/null
echo 'Install google-analytics-dashboard-for-wp plugin'
wp plugin --quiet install google-analytics-dashboard-for-wp 2> /dev/null
echo 'Install mainwp-child plugin'
wp plugin --quiet install mainwp-child 2> /dev/null

# These may not be needed, but just in case
echo 'Install wordpress-social-login plugin'
wp plugin --quiet install wordpress-social-login 2> /dev/null
echo 'Install jgc-google-recaptcha plugin'
wp plugin --quiet install jgc-google-recaptcha 2> /dev/null
echo 'Install google-analytics-dashboard-for-wp plugin'
wp plugin --quiet install google-analytics-dashboard-for-wp 2> /dev/null

wp post create --post_type=page --post_title='Home' --post_status=publish
wp post create --post_type=page --post_title='News' --post_status=publish
wp post create --post_type=page --post_title='About' --post_status=publish
wp post create --post_type=page --post_title='Contact' --post_status=publish
"

export HOMEPAGE=$(su $VUSER -c "wp post list --post_type=page --name=home --format=ids --path=$FPATH")
export NEWSPAGE=$(su $VUSER -c "wp post list --post_type=page --name=news --format=ids --path=$FPATH")
export ABOUTPAGE=$(su $VUSER -c "wp post list --post_type=page --name=about --format=ids --path=$FPATH")
export CONTACTPAGE=$(su $VUSER -c "wp post list --post_type=page --name=contact --format=ids --path=$FPATH")

    su - $VUSER -c "
cd $FPATH
wp menu create 'Primary Menu'
wp menu item add-post primary-menu $NEWSPAGE
wp menu item add-post primary-menu $ABOUTPAGE
wp menu item add-post primary-menu $CONTACTPAGE
wp menu location assign primary-menu primary

wp option update page_on_front $HOMEPAGE
wp option update page_for_posts $NEWSPAGE
wp option update show_on_front page
"
    cat << EOS >> $FPATH/wp-content/themes/astra-child/functions.php
remove_action('admin_color_scheme_picker', 'admin_color_scheme_picker');
add_action('admin_head', function() {
    echo '<style>.form-table th, .form-table td { padding: 0.25em; }</style>';
});
EOS
    chperms $VHOST
    echo "
Web
========

Wordpress: $WPURL/wp-admin/
Username: $WUSER or $AMAIL
Password: $WPASS
"
fi

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
