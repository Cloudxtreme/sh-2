#!/usr/bin/env bash
# .sh/bin/setup-host 20170524 - 20180501
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

# Essential host package list, adjust accordingly
HLIST="
  bc
  bind9-host
  bsd-mailx
  ca-certificates
  curl
  git
  iptables
  mutt
  nano
  openssh-server
  pwgen
  rsync
  ssmtp
"

[[ $1 =~ '-h' ]] && \
    echo "Usage: setup-host [domain] [(mysql)|sqlite] [admin(sysadm)] [os release(bionic)] [os mirror(archive.ubuntu.com)]" && exit 1

[[ $(id -u) -gt 0 ]] && echo "!!! ERROR: must be root (use sudo -i)" && exit 2

OSREL=${4:-'bionic'}
OSMIR=${5:-'archive.ubuntu.com'}

# Make sure that IP4 is the default
grep -q '^#precedence ::ffff:0:0/96  100' /etc/gai.conf
if [[ $? -eq 0 ]]; then
    echo "!!! Warning: giving preference to IPv4 over IPv6 (Ubuntu default)"
    sed -i 's;#precedence ::ffff:0:0/96  100;precedence ::ffff:0:0/96  100;' /etc/gai.conf
fi

if [[ ! -f /etc/apt/sources.list.orig ]]; then
    mv /etc/apt/sources.list /etc/apt/sources.list.orig
    if [[ -d /usr/share/xsessions ]]; then
        echo "!!! Setup apt sources list for $OSREL DESKTOP"
        cat << EOS | tee /etc/apt/sources.list > /dev/null
# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com KEY
# apt-get install --no-install-recommends packages

deb http://$OSMIR/ubuntu $OSREL main universe multiverse restricted
deb http://$OSMIR/ubuntu $OSREL-updates main universe multiverse restricted
deb http://$OSMIR/ubuntu $OSREL-backports main universe multiverse restricted
deb http://security.ubuntu.com/ubuntu $OSREL-security main universe multiverse restricted
#
# for adobe-flashplugin
deb http://archive.canonical.com/ubuntu $OSREL partner
#
# rolling release KDE packages (possibly unstable at times)
#deb http://ppa.launchpad.net/kubuntu-ci/stable/ubuntu $OSREL main
#
# latest Firefox and Thunderbird packages
#deb http://ppa.launchpad.net/mozillateam/firefox-next/ubuntu $OSREL main
#deb http://ppa.launchpad.net/mozillateam/thunderbird-next/ubuntu $OSREL main
EOS
    else
        echo "!!! Setup apt sources list for $OSREL SERVER"
        cat << EOS | tee /etc/apt/sources.list > /dev/null
# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com KEY
# apt-get install --no-install-recommends packages

deb http://$OSMIR/ubuntu $OSREL main universe
deb http://$OSMIR/ubuntu $OSREL-updates main universe
deb http://$OSMIR/ubuntu $OSREL-backports main universe
deb http://security.ubuntu.com/ubuntu $OSREL-security main universe
EOS
    fi
    echo "!!! Updating $OSREL package list, patience please..."
    apt-get -yqq update > /dev/null #2>&1
    echo "!!! Upgrading $OSREL package list, more patience please..."
    DEBIAN_FRONTEND=noninteractive apt-get -yqq --no-install-recommends -u dist-upgrade > /dev/null #2>&1
    echo "!!! Installing default package set, even more patience..."
    DEBIAN_FRONTEND=noninteractive apt-get -yqq --no-install-recommends install $HLIST > /dev/null 2>&1
fi

# We now have git available so install the essential SH scripts
if [[ ! -d /root/.sh ]]; then
    echo "!!! Setup NetServa SH scripts"
    cd
    git clone -q https://github.com/netserva/sh .sh > /dev/null
    /root/.sh/bin/shm install > /dev/null
    /root/.sh/bin/shm perms
fi

source /root/.shrc

# override any static defaults in .shrc
VHOST=${1:-$VHOST} # Admin Host must be hostname.domainname
DTYPE=${2:-$DTYPE}
UUSER=${3:-$UUSER}
OSREL=${4:-$OSREL}
OSMIR=${5:-$OSMIR}

# Setup default admin vhost if not exists
if [[ ! -f /root/.vhosts/$VHOST ]]; then
    echo "!!! Create initial vhost config /root/.vhosts/$VHOST with $DTYPE"
    [[ ! -d /root/.vhosts ]] && mkdir /root/.vhosts && chmod 700 /root/.vhosts
    sethost $UUSER@$VHOST $DTYPE $(newpw 5 2> /dev/null)
    gethost > /root/.vhosts/$VHOST && chmod 600 /root/.vhosts/$VHOST
    ## temporary debug
    #cat /root/.vhosts/$VHOST
fi

source /root/.vhosts/$VHOST

[[ ! -d $VPATH ]] && echo "!!! Create $VPATH" && mkdir $VPATH

if [[ ! -f /etc/hosts.orig ]]; then
    cp /etc/hosts /etc/hosts.orig
    R_IP4=$(ip -4 route get 1.1.1.1 | awk '/src/ {print $7}')
    echo "!!! Get the default route IP: $R_IP4"
    echo "!!! Rewrite a sane /etc/hosts"
    sed -i /etc/hosts \
        -e "s/^127.0.1.1.*$/127.0.1.1\tresolved/" \
        -e "/^127.0.1.1.*$/a $R_IP4\t$VHOST ${VHOST/%\.*/}"
    hostname $VHOST # Just in case
    echo $VHOST > /etc/hostname
    echo $VHOST > /etc/mailname
fi

if [[ ! -f /etc/ssh/sshd_config.orig ]]; then
    echo "!!! Create new /etc/ssh/sshd_config"
    mv /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
    cp /root/.sh/etc/_etc_ssh_sshd__config /etc/ssh/sshd_config
    systemctl restart ssh
fi

if [[ ! -d /root/.ssh ]]; then
    echo "!!! Create host /root/.ssh dir"
    mkdir /root/.ssh
    chmod 700 /root/.ssh
fi

if [[ ! -f /root/.ssh/id_rsa ]]; then
    echo "!!! Create host /root/.ssh/id_rsa key"
    ssh-keygen -t rsa -f /root/.ssh/id_rsa -N '' > /dev/null
    cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
    chmod 600 /root/.ssh/*
fi

if [[ ! -f /root/.ssh/config ]]; then
    echo "!!! Create host /root/.ssh/config"
    cat << EOS | tee -a /root/.ssh/config > /dev/null
# Host example.org
#   Hostname example.org (or 12.34.56.78)

Host *
  TCPKeepAlive yes
  ServerAliveInterval 30
  IdentityFile /root/.ssh/id_rsa
  Port 9
  User root
EOS
    chmod 600 /root/.ssh/*
fi

# TODO work this out properly
#if [[ -f /etc/NetworkManager/NetworkManager.conf ]]; then
#    if [[ ! -f /etc/NetworkManager/dispatcher.d/99iptables ]]; then
#        echo "!!! Create desktop iptables save/restore"
#        cp /root/.sh/etc/_etc_NetworkManager_dispatcher.d_99iptables \
#            /etc/NetworkManager/dispatcher.d/99iptables
#        chmod +x /etc/NetworkManager/dispatcher.d/99iptables
#    fi
#else
#    if [[ ! -f /etc/network/if-post-down.d/iptsave ]]; then
#        echo "!!! (not) Create server iptables save/restore (needs to be updated for systemd-networkd)"
#        cp /root/.sh/etc/_etc_network_if-post-down.d_iptsave \
#            /etc/network/if-post-down.d/iptsave
#        chmod +x /etc/network/if-post-down.d/iptsave
#
#        cp /root/.sh/etc/_etc_network_if-pre-up.d_iptrestore \
#            /etc/network/if-pre-up.d/iptrestore
#        chmod +x /etc/network/if-pre-up.d/iptrestore
#    fi
#fi
#
#[[ ! -f /etc/iptables.rules ]] && ssheriff clear && ssheriff

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
