# .sh/etc/_etc_nginx_common.conf 20170614 - 20180317
# Copyright (C) 2015-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

root                            /home/u/$domain/var/www;
index                           index.html index.php;
access_log                      /home/u/$domain/var/log/access.log;
access_log                      /home/u/$domain/var/log/cache.log cache;

error_page                      500 502 503 504 /50x.html;
location                        = /50x.html { root /usr/share/nginx/html; }
location                        = /robots.txt { access_log off; log_not_found off; }
location                        = /favicon.ico { access_log off; log_not_found off; }
location                        ~ /\.well-known/ { allow all; }
location                        ~ /\. { deny all; access_log off; log_not_found off; }

location                        ~* \.(?:ico|css|js|jpg|jpeg|png|gif|woff|eot|ttf|svg|txt|pdf|zip|tgz|bz2|mp3|mp4|md)$ {
    access_log                  off;
    expires                     30d;
    add_header                  Pragma public;
    add_header                  Cache-Control "public, must-revalidate, proxy-revalidate";
    if ($scheme = https) {
        add_header              Strict-Transport-Security "max-age=63072000;";
        add_header              X-Content-Type-Options nosniff;
    }
}

add_header                      X-Cache $upstream_cache_status;

#Cache everything by default
#set $no_cache 0;
# Only cache GET requests
#if ($request_method != GET) { set $no_cache 1; }
#Don't cache if the URL contains a query string
#if ($query_string != "") { set $no_cache 1; }
#Don't cache the following URLs
#if ($request_uri ~* "/(wp-login.php|wp-admin|login.php|backend|admin)") { set $no_cache 1; }
#Don't cache if there is a cookie called PHPSESSID
#if ($http_cookie ~* "PHPSESSID") { set $no_cache 1; }
#Don't cache if there is a cookie called wordpress_logged_in_[hash]
#if ($http_cookie ~* "wordpress_logged_in_") { set $no_cache 1; }

location                        /wp/ { try_files $uri $uri/ /wp/index.php$is_args$args; }
location                        / { try_files $uri $uri/ /index.php$is_args$args; }

location                        ~ ^(.+\.php)(.*)$ {
    try_files                   $uri $uri/ /index.php$is_args$args =404;
    fastcgi_split_path_info     ^(.+\.php)(/.+)$;
    fastcgi_pass                unix:/home/u/$domain/var/run/fpm.sock;
    fastcgi_index               index.php;

    fastcgi_cache               microcache;
    fastcgi_cache_valid         200 301 302 3s; # micro-cache for 3 seconds
    fastcgi_pass_header         Set-Cookie;
    fastcgi_pass_header         Cookie;

#    fastcgi_cache_bypass        $no_cache;
#    fastcgi_no_cache            $no_cache;

    include                     fastcgi_params;
    fastcgi_read_timeout        300;
    fastcgi_param               PATH_INFO $fastcgi_path_info;
    fastcgi_param               PATH_TRANSLATED $document_root$fastcgi_path_info;
    fastcgi_param               SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param               SERVER_NAME $domain;
    fastcgi_intercept_errors    on;
    if ($scheme = https) {
        add_header              Strict-Transport-Security "max-age=63072000;";
        add_header              X-Content-Type-Options nosniff;
    }
}

location                        ^~ /private/ {
    try_files                   $uri $uri/ =404;
    auth_basic                  "Restricted";
    auth_basic_user_file        /home/u/$domain/var/www/private/.htpasswd;
    if ($scheme = https) {
        add_header              Strict-Transport-Security "max-age=63072000;";
        add_header              X-Content-Type-Options nosniff;
    }
}

location                        ^~ /adm/ {
    try_files                   $uri $uri/ =404;
    auth_basic                  "Restricted";
    auth_basic_user_file        /home/u/$domain/var/www/adm/.htpasswd;
    if ($scheme = https) {
        add_header              Strict-Transport-Security "max-age=63072000;";
        add_header              X-Content-Type-Options nosniff;
    }
}
